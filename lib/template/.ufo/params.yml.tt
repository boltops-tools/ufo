<%%
  # Default values provided, replace to fit your needs.
  # These settings are required for fargate.
  # Note: I noticed that the network settings don't get applied unless you destroy and
  # recreate the service.
  @subnets = <%= @options[:subnets].inspect %>
  @security_groups = <%= @fargate_security_groups.inspect %> # auto is special value that tells ufo to create a security group automatically. Useful when using fargate or awsvpc mode.
%>
# These params are passsed to the corresponding aws-sdk ecs client methods.
# AWS Docs example: https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/ECS/Client.html#run_task-instance_method
#
# Comments left in as examples.
# Uncomment launch_type and network_configuration sections to enable fargate.
#
# More docs: http://ufoships.com/docs/params/

create_service:
  deployment_configuration:
    maximum_percent: 200
    minimum_healthy_percent: 100
  desired_count: 1
<% if @options[:launch_type] == "fargate" -%>
  launch_type: "FARGATE"
  network_configuration:
    awsvpc_configuration:
      subnets: <%%= @subnets.inspect %> # required
      security_groups: <%%= @security_groups.inspect %>
      assign_public_ip: "ENABLED" # accepts ENABLED, DISABLED
<% else -%>
  # launch_type: "FARGATE"
  # network_configuration:
  #   awsvpc_configuration:
  #     subnets: <%%= @subnets.inspect %> # required
  #     security_groups: <%%= @security_groups.inspect %>
  #     assign_public_ip: "ENABLED" # accepts ENABLED, DISABLED
<% end -%>

# update service is provide as an example below.  Though it is probably better
# to not add any options to update_service if you are using the ECS console
# to update these settings often.
update_service:
  # force_new_deployment: true
  # deployment_configuration:
  #   maximum_percent: 200
  #   minimum_healthy_percent: 100
  # desired_count: 1
  # launch_type: "FARGATE"
  # network_configuration:
  #   awsvpc_configuration:
  #     subnets: <%%= @subnets.inspect %> # required
  #     security_groups: <%%= @security_groups.inspect %>
  #     assign_public_ip: "ENABLED" # accepts ENABLED, DISABLED

run_task:
<% if @options[:launch_type] == "fargate" -%>
  launch_type: "FARGATE"
  network_configuration:
    awsvpc_configuration:
      subnets: <%%= @subnets.inspect %> # required
      security_groups: <%%= @security_groups.inspect %>
      assign_public_ip: "ENABLED" # accepts ENABLED, DISABLED
<% else -%>
  # launch_type: "FARGATE"
  # network_configuration:
  #   awsvpc_configuration:
  #     subnets: <%%= @subnets.inspect %> # required
  #     security_groups: <%%= @security_groups.inspect %>
  #     assign_public_ip: "ENABLED" # accepts ENABLED, DISABLED
<% end -%>

